{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","filter","handleChange","value","onChange","PersonForm","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","personsToShow","handleDelete","map","person","key","name","number","onClick","id","Notification","message","notifStyle","className","baseUrl","axios","get","then","res","data","newObject","post","delete","statusText","put","App","useState","persons","setPersons","setNewName","setNewNumber","setFilter","notifMessage","setNotifMessage","notifType","setNotifType","useEffect","personService","initialPersons","toLowerCase","includes","trim","event","target","preventDefault","personObject","duplicateName","some","duplicateNumber","setTimeout","personId","find","window","confirm","returnedPerson","catch","err","concat","response","error","alert","deleted","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.88bbef4b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ filter, handleChange }) => (\n    <div>filter shown with <input value={filter} onChange={handleChange} /></div>\n)\n\nexport default Filter;","import React from 'react';\n\nconst PersonForm = props => (\n    <div>\n        <form onSubmit={props.addPerson}>\n            <div>\n                name: <input value={props.newName} onChange={props.handleNameChange} />\n            </div>\n            <div>\n                number: <input value={props.newNumber} onChange={props.handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    </div>\n)\n\nexport default PersonForm;","import React from \"react\";\n\nconst Persons = ({ personsToShow, handleDelete }) => (\n  <div>\n    {personsToShow.map((person) => (\n      <div key={person.name}>\n        {person.name} {person.number} <button onClick={handleDelete(person.name, person.id)}>Delete</button>\n      </div>\n    ))}\n  </div>\n);\n\nexport default Persons;\n","import React from 'react';\nimport '../index.css';\n\nconst Notification = ({ message, type }) => {\n    if (!message) {\n        return null;\n    }\n    const notifStyle = type === 'success' ? 'success' : 'error';\n    return (\n        <div className={notifStyle}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification;","import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((res) => res.data);\n};\n\nconst create = (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then((res) => res.data);\n};\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((res) => res.statusText);\n};\n\nconst updateNumber = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\n    return request.then((res) => res.statusText);\n};\nexport default { getAll, create, deletePerson, updateNumber };\n","import React, { useState, useEffect } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\nimport personService from './services/persons';\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [filter, setFilter] = useState('');\n    const [notifMessage, setNotifMessage] = useState(null);\n    const [notifType, setNotifType] = useState('');\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => setPersons(initialPersons));\n    }, []);\n\n    const handleNameChange = event => setNewName(event.target.value);\n    const handleNumberChange = event => setNewNumber(event.target.value);\n    const handleFilterChange = event => setFilter(event.target.value);\n    const handleDeleteClick = (name, id) => () => {\n        const result = window.confirm(`Delete ${name}?`)\n        if (result) {\n            personService\n                .deletePerson(id)\n                .then(deleted => {\n                    setPersons(persons.filter(person => person.id !== id));\n                    window.alert(`Successfully deleted ${name}, status ${deleted}`)\n                });\n        }\n    }\n\n    const addPerson = event => {\n        if (!newName || !newNumber) {\n            window.alert(\"You cannot empty the form\");\n            return;\n        }\n\n        event.preventDefault();\n        const personObject = { name: newName, number: newNumber };\n        const duplicateName = persons.some(person => person.name === newName);\n        const duplicateNumber = persons.some(person => person.number === newNumber);\n\n        if (duplicateName && duplicateNumber) {\n            setNotifMessage(`${newName} is already added to phonebook`);\n            setNotifType('error');\n            setTimeout(() => {\n                setNotifMessage(null);\n            }, 5000);\n            setNewName('');\n            setNewNumber('');\n        } else if (duplicateName) {\n            const personId = persons.find(person => person.name === newName).id;\n            const result = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`);\n\n            if (result) {\n                personService\n                    .updateNumber(personId, personObject)\n                    .then(returnedPerson => {\n                        setPersons(persons.map(person => person.id === personId ? { ...person, number: newNumber } : person));\n                        setNotifMessage(\"Successfully updated the phone number!\");\n                        setNotifType('success');\n                        setTimeout(() => {\n                            setNotifMessage(null);\n                        }, 5000);\n                        setNewName('');\n                        setNewNumber('');\n                    })\n                    .catch(err => {\n                        setNotifMessage(`Information of ${newName} has already been removed from server`);\n                        setNotifType('error');\n                        setTimeout(() => {\n                            setNotifMessage(null)\n                        }, 5000);\n                        setPersons(persons.filter(person => person.id !== personId));\n                        setNewName('');\n                        setNewNumber('');\n                    });\n            }\n        } else {\n            personService\n                .create(personObject)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson));\n                    setNotifMessage(`Added ${newName}`);\n                    setNotifType('success')\n                    setNewName('');\n                    setNewNumber('');\n                    setTimeout(() => {\n                        setNotifMessage(null);\n                    }, 5000);\n                })\n                .catch(err => {\n                    setNotifMessage(err.response.data.error);\n                    setNotifType('error');\n                    setTimeout(() => {\n                        setNotifMessage(null)\n                    }, 5000);\n                    setNewName('');\n                    setNewNumber('');\n                })\n        }\n    };\n\n    const personsToShow = filter\n        ? persons.filter(person => person.name.toLowerCase().includes(filter.trim().toLowerCase()))\n        : persons;\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={notifMessage} type={notifType} />\n            <Filter filter={filter} handleChange={handleFilterChange} />\n            <h2>add a new</h2>\n            <PersonForm\n                addPerson={addPerson}\n                newName={newName} handleNameChange={handleNameChange}\n                newNumber={newNumber} handleNumberChange={handleNumberChange}\n            />\n            <h2>Numbers</h2>\n            <Persons personsToShow={personsToShow} handleDelete={handleDeleteClick} />\n        </div>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}